<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style TargetType="Panel" x:Key="WindowTopPanel">
    <Setter Property="Background" Value="{DynamicResource BaseBackground}"/>
  </Style>
  <Style TargetType="StackPanel">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="Grid">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="Label" x:Key="LabelDefault">
    <Setter Property="Padding" Value="0"/>
  </Style>
  <Style TargetType="Label" BasedOn="{StaticResource LabelDefault}"/>
  <Style TargetType="TextBlock" x:Key="TextBlockDefault">
    <Setter Property="Foreground" Value="{DynamicResource BaseForeground}"/>
  </Style>
  <Style TargetType="TextBlock" x:Key="SubTextBlock">
    <Setter Property="Foreground" Value="{DynamicResource SubForeground}"/>
    <Setter Property="FontSize" Value="14"/>
  </Style>
  <!--
  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}"/>
  -->
  <Style TargetType="ScrollViewer">
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
  </Style>
  <Style TargetType="Button" x:Key="ButtonDefault">
    <Setter Property="Background" Value="{DynamicResource ClickableBackground}"/>
    <Setter Property="Padding" Value="12,4"/>
    <Setter Property="Foreground" Value="{DynamicResource BaseForeground}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource BaseBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource HoverBackground}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource PressedBackground}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{DynamicResource DisabledBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource SubForeground}"/>
        <Setter Property="Opacity" Value="0.8"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}"/>
  <Style TargetType="ToggleButton" x:Key="ToggleButtonDefault">
    <Setter Property="Background" Value="{DynamicResource ClickableBackground}"/>
    <Setter Property="Foreground" Value="{DynamicResource BaseForeground}"/>
    <Setter Property="Padding" Value="12,4"/>
    <Setter Property="BorderBrush" Value="{DynamicResource BaseBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource HoverBackground}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource PressedBackground}"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{DynamicResource CheckedBackground}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{DynamicResource DisabledBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource SubForeground}"/>
        <Setter Property="Opacity" Value="0.8"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonDefault}"/>
  <Style TargetType="ToggleButton" x:Key="ListItemToggle" BasedOn="{StaticResource ToggleButtonDefault}">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="ToggleButton" x:Key="TabBar" BasedOn="{StaticResource ToggleButtonDefault}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="BorderThickness" Value="0,0,0,2"/>
    <Setter Property="BorderBrush" Value="{DynamicResource TabBarBackground}"/>
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource TabBarHoverBackground}"/>
        <Setter Property="Background" Value="{DynamicResource TabBarHoverBackground}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource TabBarPressedBackground}"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource TabBarCheckedBackground}"/>
        <Setter Property="Background" Value="{DynamicResource TabBarCheckedBackground}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="TextBlock" x:Key="TableListHeaderItem">
    <Setter Property="Foreground" Value="{DynamicResource SubForeground}"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="TextAlignment" Value="Right"/>
  </Style>
  <Style TargetType="ItemsControl" x:Key="TableList">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False"
                        CanContentScroll="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>