<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style TargetType="Panel" x:Key="WindowTopPanel">
    <Setter Property="Background" Value="{StaticResource BaseBackground}"/>
  </Style>
  <Style TargetType="StackPanel">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="Grid">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="Label" x:Key="LabelDefault">
    <Setter Property="Padding" Value="0"/>
  </Style>
  <Style TargetType="Label" BasedOn="{StaticResource LabelDefault}"/>
  <Style TargetType="TextBlock" x:Key="TextBlockDefault">
    <Setter Property="Foreground" Value="{StaticResource BaseForeground}"/>
  </Style>
  <Style TargetType="TextBlock" x:Key="SubTextBlock">
    <Setter Property="Foreground" Value="{StaticResource SubForeground}"/>
    <Setter Property="FontSize" Value="14"/>
  </Style>
  <Style TargetType="TextBox" x:Key="TextBoxDefault">
    <Setter Property="Foreground" Value="{StaticResource BaseForeground}"/>
    <Setter Property="Background" Value="{StaticResource BaseBackground}"/>
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxDefault}"/>
  <!--
  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}"/>
  -->
  <Style TargetType="ScrollViewer">
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
  </Style>
  <Style TargetType="Button" x:Key="ButtonDefault">
    <Setter Property="Background" Value="{StaticResource ClickableBackground}"/>
    <Setter Property="Padding" Value="12,4"/>
    <Setter Property="Foreground" Value="{StaticResource BaseForeground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BaseBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource HoverBackground}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource PressedBackground}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource SubForeground}"/>
        <Setter Property="Opacity" Value="0.8"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}"/>
  <Style TargetType="ToggleButton" x:Key="ToggleButtonDefault">
    <Setter Property="Background" Value="{StaticResource ClickableBackground}"/>
    <Setter Property="Foreground" Value="{StaticResource BaseForeground}"/>
    <Setter Property="Padding" Value="12,4"/>
    <Setter Property="BorderBrush" Value="{StaticResource BaseBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4" Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource HoverBackground}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource PressedBackground}"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{StaticResource CheckedBackground}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource DisabledBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource SubForeground}"/>
        <Setter Property="Opacity" Value="0.8"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEnabled" Value="False"/>
          <Condition Property="IsChecked" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{StaticResource CheckedBackground}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonDefault}"/>
  <Style TargetType="Button" x:Key="ListItemButton" BasedOn="{StaticResource ButtonDefault}">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="ToggleButton" x:Key="ListItemToggle" BasedOn="{StaticResource ToggleButtonDefault}">
    <Setter Property="Background" Value="{x:Null}"/>
  </Style>
  <Style TargetType="ToggleButton" x:Key="ListItemToggleNotDisabled" BasedOn="{StaticResource ListItemToggle}">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseForeground}"/>
        <Setter Property="Opacity" Value="1"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="ToggleButton" x:Key="TabBar" BasedOn="{StaticResource ToggleButtonDefault}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="BorderThickness" Value="0,0,0,2"/>
    <Setter Property="BorderBrush" Value="{StaticResource TabBarBackground}"/>
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource TabBarHoverBackground}"/>
        <Setter Property="Background" Value="{StaticResource TabBarHoverBackground}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource TabBarPressedBackground}"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource TabBarCheckedBackground}"/>
        <Setter Property="Background" Value="{StaticResource TabBarCheckedBackground}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="TextBlock" x:Key="TableListHeaderItem">
    <Setter Property="Foreground" Value="{StaticResource SubForeground}"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="TextAlignment" Value="Right"/>
  </Style>
  <Style TargetType="ItemsControl" x:Key="TableList">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False"
                        CanContentScroll="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ItemsControl" x:Key="TableListHorizontal">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False"
                        CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type Window}" x:Key="DefaultWindowStyle">
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CornerRadius="3" GlassFrameThickness="1" ResizeBorderThickness="8" UseAeroCaptionButtons="False" CaptionHeight="48" />
      </Setter.Value>
    </Setter>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Background" Value="#FF494949"/>
    <Setter Property="BorderBrush" Value="#FF14A9FF"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="White"/>
  </Style>
</ResourceDictionary>