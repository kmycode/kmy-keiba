<UserControl x:Class="KmyKeiba.Views.Parts.FinderQuery.InputNumberView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KmyKeiba.Views.Parts.FinderQuery"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Name="Root">
  <StackPanel>
    <TextBlock FontSize="20" Margin="0,0,0,4"
               Foreground="{Binding Input.IsCustomized.Value,ElementName=Root,Converter={StaticResource BooleanForegroundCustomizedCategoryConv2}}">
      <Run Text="{Binding Header,ElementName=Root}"/> <Run Text="{Binding Comment,ElementName=Root}" FontSize="14"/>
    </TextBlock>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="0.5*"/>
        <ColumnDefinition/>
        <ColumnDefinition Width="auto"/>
      </Grid.ColumnDefinitions>
      <TextBox Text="{Binding Input.Value.Value,ElementName=Root,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FontSize="20" TextAlignment="Center"/>
      <TextBlock Grid.Column="1" Text="～" FontSize="16" Foreground="{StaticResource SubForeground}" TextAlignment="Center" VerticalAlignment="Center"
                 Visibility="{Binding Input.IsRange.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"/>
      <TextBox Grid.Column="2" Text="{Binding Input.MaxValue.Value,ElementName=Root,Mode=TwoWay}" FontSize="20" TextAlignment="Center"
               Visibility="{Binding Input.IsRange.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"/>
      <ToggleButton Grid.Column="3" Name="ComparationOption" Width="60" Padding="0">
        <Grid>
          <Grid.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}">
              <Setter Property="VerticalAlignment" Value="Center"/>
              <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
          </Grid.Resources>
          <TextBlock Text="固定値" Visibility="{Binding Input.IsCompareWithFixedValue.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"/>
          <TextBlock Text="現在" Visibility="{Binding Input.IsCompareWithCurrentRace.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"
                     Foreground="{StaticResource WarningForeground}"/>
          <TextBlock Text="比較対象" Visibility="{Binding Input.IsCompareWithTargetRace.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"
                     Foreground="{StaticResource WarningForeground}"/>
          <TextBlock Text="現レ値" Visibility="{Binding Input.IsUseCurrentRaceValue.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"
                     Foreground="{StaticResource GoodForeground}"/>
          <TextBlock Text="現馬値" Visibility="{Binding Input.IsUseCurrentRaceHorseValue.Value,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"
                     Foreground="{StaticResource GoodForeground}"/>
        </Grid>
      </ToggleButton>
      <Popup PlacementTarget="{Binding ElementName=ComparationOption}" Placement="Right"
             IsOpen="{Binding IsChecked,ElementName=ComparationOption,Mode=TwoWay}" StaysOpen="False">
        <Border BorderBrush="{StaticResource BaseBorderBrush}" BorderThickness="1" Width="160" Height="auto">
          <StackPanel Margin="2,4">
            <StackPanel.Resources>
              <Style TargetType="RadioButton" BasedOn="{StaticResource ToggleButtonDefault}">
                <Setter Property="GroupName" Value="{Binding UniqueId2,ElementName=Root}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="0,2"/>
              </Style>
            </StackPanel.Resources>
            <RadioButton Content="固定値と比較" IsChecked="{Binding Input.IsCompareWithFixedValue.Value,ElementName=Root,Mode=TwoWay}"/>
            <RadioButton Content="現在レースの値と比較" IsChecked="{Binding Input.IsUseCurrentRaceValue.Value,ElementName=Root,Mode=TwoWay}">
              <RadioButton.Visibility>
                <MultiBinding Converter="{StaticResource MultiBooleanConv}">
                  <Binding Path="HasRace" ElementName="Root"/>
                  <Binding Path="CanCompareWithCurrentRace" ElementName="Root"/>
                  <Binding Path="Input.IsCompareWithHorse" ElementName="Root" Converter="{StaticResource NegativeConv}"/>
                  <Binding Path="Input.CanCompareCurrentRaceValue" ElementName="Root"/>
                </MultiBinding>
              </RadioButton.Visibility>
            </RadioButton>
            <RadioButton Content="現在の馬の値と比較" IsChecked="{Binding Input.IsUseCurrentRaceHorseValue.Value,ElementName=Root,Mode=TwoWay}">
              <RadioButton.Visibility>
                <MultiBinding Converter="{StaticResource MultiBooleanConv}">
                  <Binding Path="HasRaceHorse" ElementName="Root"/>
                  <Binding Path="CanCompareWithCurrentRace" ElementName="Root"/>
                  <Binding Path="Input.IsCompareWithHorse" ElementName="Root"/>
                  <Binding Path="Input.CanCompareCurrentRaceValue" ElementName="Root"/>
                </MultiBinding>
              </RadioButton.Visibility>
            </RadioButton>
            <StackPanel Visibility="{Binding Input.CanCompareAsBeforeRace,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}">
              <RadioButton Content="検索レースと比較" IsChecked="{Binding Input.IsCompareWithCurrentRace.Value,ElementName=Root,Mode=TwoWay}"
                           Visibility="{Binding IsComparable,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"/>
              <RadioButton Content="比較対象レースと比較" IsChecked="{Binding Input.IsCompareWithTargetRace.Value,ElementName=Root,Mode=TwoWay}"
                           Visibility="{Binding IsComparable,ElementName=Root,Converter={StaticResource BooleanVisibilityConv}}"/>
            </StackPanel>

            <TextBlock Foreground="{StaticResource SubForeground}" FontSize="14" TextWrapping="Wrap"
                       Text="{Binding Input.ComparationWithBeforeRaceComment.Value,ElementName=Root}"
                       Margin="4,0"/>

            <Button Content="リセット" FontSize="14" Margin="0,16,0,0" Command="{Binding Input.ResetCommand,ElementName=Root}"/>
          </StackPanel>
        </Border>
      </Popup>
    </Grid>
    <UniformGrid Rows="1">
      <UniformGrid.Resources>
        <Style TargetType="RadioButton" BasedOn="{StaticResource ToggleButtonDefault}">
          <Setter Property="FontSize" Value="12"/>
          <Setter Property="GroupName" Value="{Binding UniqueId,ElementName=Root}"/>
          <Setter Property="Padding" Value="0,3"/>
          <Setter Property="MinHeight" Value="0"/>
        </Style>
      </UniformGrid.Resources>
      <RadioButton Content="範囲" IsChecked="{Binding Input.IsRange.Value,ElementName=Root,Mode=TwoWay}"/>
      <RadioButton Content="より大きい" IsChecked="{Binding Input.IsGreaterThan.Value,ElementName=Root,Mode=TwoWay}">
        <RadioButton.Visibility>
          <MultiBinding Converter="{StaticResource MultiBooleanConv}" ConverterParameter="Or">
            <Binding Path="Input.IsGreaterThan.Value" ElementName="Root"/>
            <Binding Path="Input.IsLessThan.Value" ElementName="Root"/>
          </MultiBinding>
        </RadioButton.Visibility>
      </RadioButton>
      <RadioButton Content="以上" IsChecked="{Binding Input.IsGreaterThanOrEqual.Value,ElementName=Root,Mode=TwoWay}"/>
      <RadioButton Content="より小さい" IsChecked="{Binding Input.IsLessThan.Value,ElementName=Root,Mode=TwoWay}">
        <RadioButton.Visibility>
          <MultiBinding Converter="{StaticResource MultiBooleanConv}" ConverterParameter="Or">
            <Binding Path="Input.IsGreaterThan.Value" ElementName="Root"/>
            <Binding Path="Input.IsLessThan.Value" ElementName="Root"/>
          </MultiBinding>
        </RadioButton.Visibility>
      </RadioButton>
      <RadioButton Content="以下" IsChecked="{Binding Input.IsLessThanOrEqual.Value,ElementName=Root,Mode=TwoWay}"/>
      <RadioButton Content="等しい" IsChecked="{Binding Input.IsEqual.Value,ElementName=Root,Mode=TwoWay}"/>
      <RadioButton Content="等しくない" IsChecked="{Binding Input.IsNotEqual.Value,ElementName=Root,Mode=TwoWay}"/>
    </UniformGrid>
  </StackPanel>
</UserControl>
