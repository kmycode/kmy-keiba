// <auto-generated />
using System;
using KmyKeiba.Downloader;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KmyKeiba.Downloader.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220808235855_AddRaceDetailInfos")]
    partial class AddRaceDetailInfos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("KmyKeiba.Data.Db.BornHorseData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Belongs")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Born")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Entried")
                        .HasColumnType("TEXT");

                    b.Property<string>("FFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FFFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FFMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FMFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FMMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("InviteFrom")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("MFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MFFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MFMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MMFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MMMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProducingCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Retired")
                        .HasColumnType("TEXT");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainerCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Code", "MFBreedingCode");

                    b.ToTable("BornHorses");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.DownloaderTaskData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Command")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Error")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DownloaderTasks");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.ExactaOddsData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Odds")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("ExactaOdds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.ExpansionMemoConfig", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("MemoGroup")
                        .HasColumnType("INTEGER");

                    b.Property<short>("MemoNumber")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PointLabelId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Style")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MemoConfigs");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.ExternalNumberConfig", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DotFormat")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FileFormat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileNamePattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RaceIdFormat")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SortRule")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ValuesFormat")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ExternalNumberConfigs");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.ExternalNumberData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ConfigId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ExternalNumbers");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.FrameNumberOddsData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FramesCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Odds")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("FrameNumberOdds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.HorseBloodData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BornYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FatherKey")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<short>("From")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherKey")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductingName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Key", "Code");

                    b.ToTable("HorseBloods");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.HorseBloodInfoData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FamilyId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.ToTable("HorseBloodInfos");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.HorseData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Belongs")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Born")
                        .HasColumnType("TEXT");

                    b.Property<short>("CentralFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Entried")
                        .HasColumnType("TEXT");

                    b.Property<string>("FFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FFFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FFMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FMFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FMMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("InviteFrom")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("MFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MFFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MFMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MMFBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MMMBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("MotherBreedingCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProducingCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Retired")
                        .HasColumnType("TEXT");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainerCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Code", "MFBreedingCode");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.LearningDataCache", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cache")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CacheVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HorseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LearningDataCaches");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.MemoData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("CourseKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Key2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Key3")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Point")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Target3")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Point", "Target1", "Key1");

                    b.ToTable("Memos");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.PointLabelData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Labels")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PointLabels");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.QuinellaOddsData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Odds")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("QuinellaOdds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.QuinellaPlaceOddsData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("OddsMax")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("OddsMin")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("QuinellaPlaceOdds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RaceChangeData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("ChangeType")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RaceChanges");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RaceData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("AfterHaronTime3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("AfterHaronTime4")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Area")
                        .HasColumnType("INTEGER");

                    b.Property<short>("BeforeHaronTime3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("BeforeHaronTime4")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Corner1Result")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("Corner2Result")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("Corner3Result")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("Corner4Result")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<int>("CornerPositionInfos")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Course")
                        .HasColumnType("INTEGER");

                    b.Property<short>("CourseRaceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<short>("Cross")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<short>("GradeId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsConditionSetManually")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWeatherSetManually")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("LapTimes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name6Chars")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<short>("Nichiji")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PrizeMoney")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("PrizeMoney1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ResultHorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RiderWeight")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<short>("SteeplechaseMileTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectAge2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectAge3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectAge4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectAge5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectAgeYounger")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubjectDisplayInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectInfo1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectInfo2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("TrackCode")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackCondition")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackCornerDirection")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackGround")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackOption")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackType")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackWeather")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Course");

                    b.HasIndex("Key");

                    b.HasIndex("StartTime");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RaceHorseData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("AbnormalResult")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AfterThirdHalongTime")
                        .HasColumnType("TEXT");

                    b.Property<short>("AfterThirdHalongTimeValue")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Course")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CourseCode");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FirstCornerOrder")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FourthCornerOrder")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FrameNumber")
                        .HasColumnType("INTEGER");

                    b.Property<short>("GoalOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlinkers")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsContainsRiderWinRate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRunningStyleSetManually")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("Mark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("TEXT");

                    b.Property<short>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Odds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OwnerCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<short>("PlaceOddsMax")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlaceOddsMin")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Popular")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PreviousRaceDays")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RaceCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RaceCountAfterLastRest")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RaceCountWithinRunning")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RaceCountWithinRunningCompletely")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<short>("ResultLength1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ResultLength2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ResultLength3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ResultOrder")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("ResultTime")
                        .HasColumnType("TEXT");

                    b.Property<short>("ResultTimeValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiderCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("RiderName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("RiderWeight")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RunningStyle")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SecondCornerOrder")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ThirdCornerOrder")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TimeDifference")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainerCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniformFormat")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<short>("Weight")
                        .HasColumnType("INTEGER");

                    b.Property<short>("WeightDiff")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RiderCode");

                    b.HasIndex("TrainerCode");

                    b.HasIndex("RaceKey", "Key");

                    b.HasIndex("Key", "RaceCount", "RaceCountWithinRunning", "RaceCountWithinRunningCompletely", "RaceCountAfterLastRest");

                    b.ToTable("RaceHorses");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RaceStandardTimeMasterData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("A3FAverage")
                        .HasColumnType("REAL");

                    b.Property<double>("A3FDeviation")
                        .HasColumnType("REAL");

                    b.Property<double>("A3FMedian")
                        .HasColumnType("REAL");

                    b.Property<double>("Average")
                        .HasColumnType("REAL");

                    b.Property<short>("Condition")
                        .HasColumnType("INTEGER");

                    b.Property<short>("CornerDirection")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Course")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Deviation")
                        .HasColumnType("REAL");

                    b.Property<short>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DistanceMax")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Ground")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<double>("Median")
                        .HasColumnType("REAL");

                    b.Property<int>("SampleCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SampleEndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SampleStartTime")
                        .HasColumnType("TEXT");

                    b.Property<short>("TrackOption")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TrackType")
                        .HasColumnType("INTEGER");

                    b.Property<double>("UntilA3FAverage")
                        .HasColumnType("REAL");

                    b.Property<double>("UntilA3FDeviation")
                        .HasColumnType("REAL");

                    b.Property<double>("UntilA3FMedian")
                        .HasColumnType("REAL");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Weather")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Course");

                    b.ToTable("RaceStandardTimes");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RefundData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Exacta1Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Exacta1Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Exacta1Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Exacta2Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Exacta2Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Exacta2Number3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExactaNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExactaNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExactaNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Frame1Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Frame1Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Frame1Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Frame2Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Frame2Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Frame2Number3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrameNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrameNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrameNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("PlaceNumber1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaceNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlaceNumber2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaceNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlaceNumber3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaceNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlaceNumber4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaceNumber4Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlaceNumber5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaceNumber5Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Quinella1Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Quinella1Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Quinella1Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Quinella2Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Quinella2Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Quinella2Number3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number4")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number5")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number6")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace1Number7")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number4")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number5")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number6")
                        .HasColumnType("INTEGER");

                    b.Property<short>("QuinellaPlace2Number7")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber4Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber5Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber6Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuinellaPlaceNumber7Money")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<short>("SingleNumber1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SingleNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SingleNumber2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SingleNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SingleNumber3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SingleNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta1Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta1Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta1Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta1Number4")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta1Number5")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta1Number6")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta2Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta2Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta2Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta2Number4")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta2Number5")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta2Number6")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta3Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta3Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta3Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta3Number4")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta3Number5")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trifecta3Number6")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrifectaNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrifectaNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrifectaNumber3Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrifectaNumber4Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrifectaNumber5Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrifectaNumber6Money")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio1Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio1Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio1Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio2Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio2Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio2Number3")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio3Number1")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio3Number2")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Trio3Number3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrioNumber1Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrioNumber2Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrioNumber3Money")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RiderData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Belongs")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Born")
                        .HasColumnType("TEXT");

                    b.Property<short>("CentralFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstRideRaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstRideRaceKeySteeplechase")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstWinRaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstWinRaceKeySteeplechase")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(56)
                        .HasColumnType("TEXT");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainerCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Riders");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.RiderWinRateMasterData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("AllDirtCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("AllDirtSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("AllTurfCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("AllTurfSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DistanceMax")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FirstDirtCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FirstDirtSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FirstTurfCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FirstTurfSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiderCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("SecondDirtCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SecondDirtSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SecondTurfCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SecondTurfSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ThirdDirtCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ThirdDirtSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ThirdTurfCount")
                        .HasColumnType("INTEGER");

                    b.Property<short>("ThirdTurfSteepsCount")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RiderCode");

                    b.ToTable("RiderWinRates");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.SingleOddsTimeline", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PlaceOddsRaw")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("SingleOddsRaw")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("SingleOddsTimelines");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.SystemData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntValue")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StringValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SystemData");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.TicketData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FormType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMulti")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Numbers1")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Numbers2")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Numbers3")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.TrainerData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Belongs")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Born")
                        .HasColumnType("TEXT");

                    b.Property<short>("CentralFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(56)
                        .HasColumnType("TEXT");

                    b.Property<short>("Sex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.TrainingData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Center")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FirstLapTime")
                        .HasColumnType("INTEGER");

                    b.Property<short>("FourthLapTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HorseKey")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("MovieStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SecondLapTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<short>("ThirdLapTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HorseKey");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.TrifectaOddsData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Odds")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("TrifectaOdds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.TrioOddsData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("HorsesCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Odds")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RaceKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RaceKey");

                    b.ToTable("TrioOdds");
                });

            modelBuilder.Entity("KmyKeiba.Data.Db.WoodtipTrainingData", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Center")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Course")
                        .HasColumnType("INTEGER");

                    b.Property<short>("DataStatus")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HorseKey")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<short>("Lap10Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap1Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap2Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap3Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap4Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap5Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap6Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap7Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap8Time")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Lap9Time")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<short>("MovieStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HorseKey");

                    b.ToTable("WoodtipTrainings");
                });
#pragma warning restore 612, 618
        }
    }
}
